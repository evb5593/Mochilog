@{
    ViewData["Title"] = "The Mochi-Log";
}

<div class="overlay-content">
    <div id="mochi-title">
        <h2 class="gallery-title">The Mochi-Log</h2>

        <div id="mochi-container">
            <img class="mochi-image" />
            <img class="mochi-image" />
        </div>
    </div>

    <div class="nav-links">
        <a href="/MochiPhotos">Gallery</a>
        <a href="/MochiPhotos/Create">Add Mochi</a>
    </div>
</div>

<style>
    html, body {
        margin: 0;
        padding: 0;
        height: 100%;
        font-family: 'Segoe UI', sans-serif;
        color: white;
        overflow: hidden;
    }

    .overlay-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding-top: 0; 
        min-height: 100vh;
        position: relative;
        text-shadow: 0 0 5px black;
        z-index: 1;
    }

    #mochi-title {
        display: flex;
        flex-direction: column;
        align-items: center;
        animation: float 3s infinite ease-in-out;
    }

    .gallery-title {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        text-shadow: 0 0 10px black;
        animation: inherit;
    }

    #mochi-container {
        position: relative;
        width: 300px;
        height: 300px;
        margin-bottom: 30px;
    }

    .mochi-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 20px;
        box-shadow: 0 0 30px rgba(255, 255, 255, 0.3);
        opacity: 0;
        transition: opacity 1.5s ease-in-out;
    }

    .mochi-image.active {
        opacity: 1;
        z-index: 1;
    }

    @@keyframes float {
        0% { transform: translateY(0); }
        50% { transform: translateY(-10px); }
        100% { transform: translateY(0); }
    }

    .nav-links {
        display: flex;
        gap: 2rem;
        margin-top: 1rem;
    }

    .nav-links a {
        color: white;
        background: rgba(0, 0, 0, 0.5);
        padding: 0.75rem 1.5rem;
        border-radius: 10px;
        text-decoration: none;
        font-size: 1.2rem;
        transition: background 0.3s ease;
    }

    .nav-links a:hover {
        background: rgba(255, 255, 255, 0.2);
    }
</style>

<script>
    const [imgA, imgB] = document.querySelectorAll(".mochi-image");
    let isAActive = true;
    let current = 0;
    let imageIds = [];

    async function fetchImageIds() {
        const res = await fetch("/MochiPhotos/GetImageIds");
        imageIds = await res.json();

        if (imageIds.length < 2) return;

        shuffleArray(imageIds);

        const firstSrc = `/MochiPhotos/GetImage?id=${imageIds[0]}`;
        const preloadImg = new Image();
        preloadImg.onload = () => {
            imgA.src = firstSrc;
            imgA.classList.add("active");

            imgB.src = `/MochiPhotos/GetImage?id=${imageIds[1]}`;
        };
        preloadImg.src = firstSrc;
    }

    function cycleImages() {
        if (imageIds.length === 0) return;

        current++;

        if (current >= imageIds.length) {
            shuffleArray(imageIds);
            current = 0;
        }

        const nextSrc = `/MochiPhotos/GetImage?id=${imageIds[current]}`;

        const preloadImg = new Image();
        preloadImg.onload = () => {
            if (isAActive) {
                imgB.src = nextSrc;
                imgA.classList.remove("active");
                imgB.classList.add("active");
            } else {
                imgA.src = nextSrc;
                imgB.classList.remove("active");
                imgA.classList.add("active");
            }
            isAActive = !isAActive;
        };
        preloadImg.src = nextSrc;
    }

    function shuffleArray(array) {
        for (let i = array.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [array[i], array[j]] = [array[j], array[i]];
        }
    }

    fetchImageIds().then(() => {
        setInterval(cycleImages, 5000);
    });
</script>
